Some time ago the X server and the Synaptics touchpad driver switched to a
different acceleration mechanism which is dependent on the framebuffer size.
This means that if you use XRandR to dynamically expand your desktop to an
external monitor, the touchpad speed changes and can be very different in
horizontal/vertical dimension.

If you don't use XRandR, HorizResolution and VertResolution options should be
enough, but if the framebuffer size changes while the X server is running,
there's no workaround. This patch exposes the scaling coefficients (these are
initially computed from HorizResolution, etc.) as xinput properties.

As an example, my notebook display is 1280x800 and my external display is
1680x1050, and when I put them in a vertical setup, the framebuffer size is
1680x1850. I use the following command to revert the speed changes caused by
expanding the desktop to the external monitor:

$ xinput set-prop "SynPS/2 Synaptics TouchPad" "Synaptics Pad Scaling Coefficients" 0.43 0.76

 -- Tomáš Janoušek <tomi@nomi.cz>

diff --git a/include/synaptics-properties.h b/include/synaptics-properties.h
index c550cef..c4eaacc 100644
--- a/include/synaptics-properties.h
+++ b/include/synaptics-properties.h
@@ -152,6 +152,9 @@
 /* 32 bit unsigned, 2 values, vertical, horizontal in units/millimeter */
 #define SYNAPTICS_PROP_RESOLUTION "Synaptics Pad Resolution"
 
+/* float, 2 values, vertical, horizontal */
+#define SYNAPTICS_PROP_SCALING_COEFF "Synaptics Pad Scaling Coefficients"
+
 /* 32 bit, 4 values, left, right, top, bottom */
 #define SYNAPTICS_PROP_AREA "Synaptics Area"
 
diff --git a/src/properties.c b/src/properties.c
index 5f11cf2..5e8b27e 100644
--- a/src/properties.c
+++ b/src/properties.c
@@ -90,6 +90,7 @@ Atom prop_grab                  = 0;
 Atom prop_gestures              = 0;
 Atom prop_capabilities          = 0;
 Atom prop_resolution            = 0;
+Atom prop_scaling_coeff         = 0;
 Atom prop_area                  = 0;
 Atom prop_noise_cancellation    = 0;
 Atom prop_product_id            = 0;
@@ -291,6 +292,10 @@ InitDeviceProperties(InputInfoPtr pInfo)
     values[1] = para->resolution_horiz;
     prop_resolution = InitAtom(pInfo->dev, SYNAPTICS_PROP_RESOLUTION, 32, 2, values);
 
+    fvalues[0] = priv->vert_coeff;
+    fvalues[1] = priv->horiz_coeff;
+    prop_scaling_coeff = InitFloatAtom(pInfo->dev, SYNAPTICS_PROP_SCALING_COEFF, 2, fvalues);
+
     values[0] = para->area_left_edge;
     values[1] = para->area_right_edge;
     values[2] = para->area_top_edge;
@@ -676,6 +681,16 @@ SetProperty(DeviceIntPtr dev, Atom property, XIPropertyValuePtr prop,
     {
         /* read-only */
         return BadValue;
+    } else if (property == prop_scaling_coeff)
+    {
+	float *coeff;
+	if (prop->size != 2 || prop->format != 32 || prop->type != float_type)
+            return BadMatch;
+
+        coeff = (float*)prop->data;
+
+        priv->vert_coeff = coeff[0];
+        priv->horiz_coeff = coeff[1];
     } else if (property == prop_area)
     {
         INT32 *area;
